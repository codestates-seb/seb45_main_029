소소한 이야기) 
1. 웬만하면 대기업을 가라 ㅋㅋㅋ ( 아니면 사수가 없거나 사수들이 바빠서 가르쳐주지를 못한다. )
2. 리액트를 쓰는 큰 기업들은 nextJS를 무조건 쓴다고 보면 된다.
2-1. 리액트로 길을 가고자 한다면 nextJS를 결국엔 배워야 할 것이다. 
3. 영어를 잘해야 공식문서를 잘 읽을 수 있다~~ 개발자라면 영어를 잘하자~
4. 시간 분배를 나누는게 -> 강사님이 하루를 더 내야해서 ㅠㅠㅠ 웬만하면 1시간 30분 한번에 가즈아~@@@@@@@
5. 멘토링 시간을 알차게 잘 쓰자!!! ( 어차피 써야 하는 시간이니까! )

=========================================================================================
[질문]

1. 유튜브 iframe 또는 유튜브 API를 사용해서 보여주면 될 것같다!! ( 충분히 구현 가능 )
=> iframe을 사용하는 게 더 낫겠다

2. data error ( 백엔드 회의에서 나온 이게 무슨 말인지 ??! )

// success
{
	isSuccess : true (boolean value)
  data: {
		userId: 123,
		nickanme: 'test'
	},
	error: null,
}

// failed
{
  data: null,
	error: {
		message: '존재하지 않는 사용자입니다.',
		code: 404,
	},
}
=> 보통 이렇게 하는 경우도 있지만, 하나를 더 추가하기도 한다 보통은 boolean 값으로 판별하거나
그냥 axios에서 status 구분을 해줌 ( 그래서 확인 가능 ) => 좀더 명확하게 명시적으로 isSuces를 쓰는거임
그냥 http 메서드를 쓰는것 api호출단에서 실패를 받도록 작업한다. 

=> req res 미리 정하고 들어가야 한다 ( 프론트 백끼리 )


3. 피그마 사용 ( 업데이트를 많이 해서 점점 이상해지기도 함 ㅋㅋ )
=> 리액트에서 컴포넌트를 만드는 것
=> 보통은 개발자는 피그마를 쓸 일이 잘 없을 것이다~~ ( 보통은 디자이너 분들이 해주심 )
=> 그래도 알아두면 좋아용! // 개인적 프로젝트나 사이드 프로젝트에서 유용하게 쓸 수 있겠
=> 오토 레이아웃을 조심하자!!
=> 프레임을 너무 많이 쓰는 것은 마치 html 작업에서 div를 많이 겹치는 느낌
cf) 검색엔진 최적화를 위해선 시멘틱 태그를 많이 써주는 것이 좋다!! (SEO 최적화)

4. 화면정의서 => @@구체적@@으로 어떤 기능을 하는지 화면정의서에 적어두기
=> 화면정의서란 어느 누가봐도 이해할 수 있게끔 작성!! ( 최대한 간략하면서, 구체적으로! )
=> 백엔드가 봐도 같은 생각이 들게끔 ㅋㅋㅋ ( 서로 다른 생각을 하면 위험하다 ) => 결국은 서로가 맞아야 한다!
=> 사용자 요구서에 적혀있는 것이 화면정의서에 화면에 따라 나뉘어지는 것이라고 보면 될 것 같음
cf) 스토리보드) 화면 정의서랑 비슷한데, 와이어 프레임 => 좀더 상세하게 적는 것이라고 보면 됨 (기획서)
=> 이 기획단계에서 시간을 많이 써야 나중에 문제가 없다!


5. 폴더 관리
=> 기본은 재사용에 따라간다고 보면 됨
=> 사람마다 정말 다르다! ( 기능별, atomic 디자인 별 )
=> 하지만 비슷한 부분은 redux, components, pages 정도는 비슷하다. 
=> 큰 건 기능별로 추천@@@@ ( Feat단위로 ) => 작은 것들은 atomic디자인 같이 가도 될듯 합니다! 
=> 재사용이 가능한 아이들끼리 합쳐서 폴더로 만들 수도 있다
( 근데 어떻게 재사용 가능한걸 만드냐구~~, 근데 하다보면 겹치는 게 보인단 말이지!! 이런걸 )


6. 주제에 대한 의견은 어떠십니까?!!! 
=> 맞춤추천 -> 백엔드를 죽이는 짓이다

7. 구현 => 충분히 가능하다!!!!!!!!!!!!!!!!!! ( 엔지니어 says 혼자서 프론트백 다해도 시간 남음 ㅋ )


8. 정확한 키워드 검색 ( ex) 허리재활 and 허리 띄우고 재활 검색해서 교집합? ) 
=> 그렇다해도 완벽한 필터링은 힘들 것 같다!!!

9. 포인트 소멸기한 그런거만 없으면 굉장히 쉽다

챗봇 같은거를 하려고 하면 굉장히 힘들어질것이다 ( 그냥 지금처럼 출첵하는것만 하는게 간단하겠당~ )
=> 잠 포기하고 하면 충분히 구현가능할 것으로 보임~~
=> 근데 과연,....